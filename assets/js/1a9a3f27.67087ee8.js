(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{213:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return f}));var a=t(0),r=t.n(a);function c(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){c(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)t=c[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=r.a.createContext({}),p=function(e){var n=r.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=p(e.components);return r.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},d=r.a.forwardRef((function(e,n){var t=e.components,a=e.mdxType,c=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(t),d=a,f=u["".concat(o,".").concat(d)]||u[d]||b[d]||c;return t?r.a.createElement(f,i(i({ref:n},l),{},{components:t})):r.a.createElement(f,i({ref:n},l))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var c=t.length,o=new Array(c);o[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var l=2;l<c;l++)o[l]=t[l];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},88:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return s})),t.d(n,"default",(function(){return p}));var a=t(3),r=t(7),c=(t(0),t(213)),o={title:"Usage",slug:"/blockchains/usage"},i={unversionedId:"blockchains/usage",id:"blockchains/usage",isDocsHomePage:!1,title:"Usage",description:"Let's look at an example how a dApp can be initialized with support for a substrate based blockchain.",source:"@site/docs/blockchains/usage.md",slug:"/blockchains/usage",permalink:"/blockchains/usage",editUrl:"https://github.com/airgap-it/beacon-docs/edit/main/src/docs/blockchains/usage.md",version:"current",sidebar:"docs",previous:{title:"Introduction",permalink:"/blockchains/introduction"},next:{title:"Substrate",permalink:"/blockchains/substrate"}},s=[],l={toc:s};function p(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(c.b)("p",null,"Let's look at an example how a dApp can be initialized with support for a ",Object(c.b)("inlineCode",{parentName:"p"},"substrate")," based blockchain."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-typescript"},'import { DAppClient } from "@airgap/beacon-dapp";\nimport { SubstrateBlockchain } from "@airgap/beacon-blockchain-substrate";\n\nconst client = new DAppClient({\n  name: "Example DApp",\n});\n\nconst substrateBlockchain = new SubstrateBlockchain();\nclient.addBlockchain(substrateBlockchain);\n\nclient.getActiveAccount().then((activeAccount) => {\n  client\n    .request({\n      blockchainIdentifier: "substrate",\n      type: "blockchain_request",\n      blockchainData: {\n        type: "transfer_request",\n        scope: "transfer",\n        sourceAddress: activeAccount.address,\n        amount: "1",\n        recipient: activeAccount.address, // Send to self\n        network: {\n          genesisHash:\n            "0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636",\n        },\n        mode: "return",\n      },\n    })\n    .then((response) => {\n      console.log("response", response);\n    });\n});\n')),Object(c.b)("p",null,"On the wallet side, the blockchain doesn't explicitly have to be registered, it can be filtered by the ",Object(c.b)("inlineCode",{parentName:"p"},"blockchainIdentifier")," property."),Object(c.b)("pre",null,Object(c.b)("code",{parentName:"pre",className:"language-typescript"},'import { WalletClient } from "@airgap/beacon-wallet";\nimport { BeaconMessageType } from "@airgap/beacon-types";\n\nconst client = new WalletClient({\n  name: "Example Wallet", // Name of the Wallet\n});\n\nawait client.init();\n\nclient.connect(async (message) => {\n  if (message.version === "3") {\n    // Example: Handle PermissionRequest. A wallet should handle all request types\n    if (message.message.type === beacon.BeaconMessageType.PermissionRequest) {\n      if (message.message.blockchainIdentifier !== "substrate") {\n        throw new Error("Only KSM supported");\n      }\n      console.log("SUBSTRATE MESSAGE");\n      // Show a UI to the user where he can confirm sharing an account with the DApp\n\n      const response = {\n        id: message.id,\n        type: BeaconMessageType.PermissionResponse,\n        blockchainData: {\n          appMetadata: { name: "Example Wallet" },\n          scopes: [0],\n          accounts: [\n            {\n              network: {\n                genesisHash:\n                  "0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636",\n              },\n              addressPrefix: 0,\n              publicKey:\n                "3b92229274683b338cf8b040cf91ac0f8e19e410f06eda5537ef077e718e0024",\n            },\n          ],\n        },\n      };\n\n      // Send response back to DApp\n      client.respond(response);\n    }\n  }\n});\n')))}p.isMDXComponent=!0}}]);